<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on uyaki的博客</title>
    <link>http://uyaki.github.io/tags/git/</link>
    <description>Recent content in git on uyaki的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 23 Feb 2020 22:53:46 +0800</lastBuildDate><atom:link href="http://uyaki.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git标准Fork &amp; Pull Request流程</title>
      <link>http://uyaki.github.io/post/git/git%E6%A0%87%E5%87%86forkpullrequest%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sun, 23 Feb 2020 22:53:46 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E6%A0%87%E5%87%86forkpullrequest%E6%B5%81%E7%A8%8B/</guid>
      <description>fork项目 直接进入 GitHub 页面，点击Fork按钮。 就是这么简单。 克隆到本地，才能开始骚操作～～ 1 2 # Clone your fork to your local machine $ git clone git@github.com:USERNAME/FORKED-PROJECT.git 让你的fork保持最新</description>
    </item>
    
    <item>
      <title>Git中文乱码解决</title>
      <link>http://uyaki.github.io/post/git/git%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sun, 23 Feb 2020 22:05:37 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</guid>
      <description>git add 显示中文乱码 使用 git add 添加要提交的文件的时候，如果文件名是中文，会显示形如\347\204\246\347\263\226\345\245</description>
    </item>
    
    <item>
      <title>Git利用orphan分支功能清空所有历史记录</title>
      <link>http://uyaki.github.io/post/git/git%E5%88%A9%E7%94%A8orphan%E5%88%86%E6%94%AF%E5%8A%9F%E8%83%BD%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 19 Feb 2020 09:44:59 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E5%88%A9%E7%94%A8orphan%E5%88%86%E6%94%AF%E5%8A%9F%E8%83%BD%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>目的 清空git项目，获得一个没有历史记录的空项目 实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ## 创建一个orphan分支 $ git checkout --orphan tmp_branch ## 给爷爬~~~~ $ git rm</description>
    </item>
    
    <item>
      <title>Git使用子模块功能搭建多模块无关联IDEA项目</title>
      <link>http://uyaki.github.io/post/git/git%E4%BD%BF%E7%94%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E5%85%B3%E8%81%94idea%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Wed, 19 Feb 2020 09:00:55 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E4%BD%BF%E7%94%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E5%85%B3%E8%81%94idea%E9%A1%B9%E7%9B%AE/</guid>
      <description>项目创建 1 2 3 4 5 6 $ mkdir project-parent $ cd project-parent $ git submodule add git@repo1 $ git submodule add git@repo2 $ git submodule add git@repo3 ## git push 加载项目（他人） 1 2 3 4 $ git clone git@project-parent-repo $ cd project-parent $ git submodule init $ git submodule update idea idea使用op</description>
    </item>
    
    <item>
      <title>Git中HEAD游离的原因与解决方法</title>
      <link>http://uyaki.github.io/post/git/git%E4%B8%ADhead%E6%B8%B8%E7%A6%BB%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 17 Feb 2020 14:48:59 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E4%B8%ADhead%E6%B8%B8%E7%A6%BB%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>什么是 HEAD Git 中的 HEAD 可以理解为指针，指向当前仓库所处的分支。一般在有 Git 管理的目录下打开 Git 终端都能在当前路径的尾巴上，看到所处的分支名。 还可以在命</description>
    </item>
    
    <item>
      <title>Git删除 .DS_Store</title>
      <link>http://uyaki.github.io/post/git/git%E5%88%A0%E9%99%A4.ds_store/</link>
      <pubDate>Tue, 11 Feb 2020 11:16:29 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E5%88%A0%E9%99%A4.ds_store/</guid>
      <description>cd 到项目路径 执行 1 $ find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch 插入到.gitignore 1 $ echo .DS_Store &amp;gt;&amp;gt; .gitignore git push</description>
    </item>
    
    <item>
      <title>Git空提交</title>
      <link>http://uyaki.github.io/post/git/git%E7%A9%BA%E6%8F%90%E4%BA%A4/</link>
      <pubDate>Tue, 11 Feb 2020 11:12:37 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E7%A9%BA%E6%8F%90%E4%BA%A4/</guid>
      <description>1 $ git commit --allow-empty -m &amp;#34;chore: touch ops build&amp;#34;</description>
    </item>
    
    <item>
      <title>Git加速最佳实践</title>
      <link>http://uyaki.github.io/post/git/git%E5%8A%A0%E9%80%9F%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 11 Feb 2020 09:25:55 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git/git%E5%8A%A0%E9%80%9F%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>Git支持的协议 https协议，https://协议需要配置git的http.proxy参数 ssh协议，ssh://协议需要配置ssh的Pr</description>
    </item>
    
  </channel>
</rss>
