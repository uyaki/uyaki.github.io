<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on uyaki的博客</title>
    <link>http://uyaki.github.io/post/</link>
    <description>Recent content in Posts on uyaki的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 15 Sep 2022 01:01:51 +0800</lastBuildDate><atom:link href="http://uyaki.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows资源管理器优化神器QTTabBar</title>
      <link>http://uyaki.github.io/post/windows%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E4%BC%98%E5%8C%96%E7%A5%9E%E5%99%A8qttabbar/</link>
      <pubDate>Thu, 15 Sep 2022 01:01:51 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/windows%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E4%BC%98%E5%8C%96%E7%A5%9E%E5%99%A8qttabbar/</guid>
      <description>官网 QTTabBar 安装 按流程指引直接下一步 启动 新打开一个「资源管理器」，也就是随意打开一个文件夹。 点击顶栏的「查看」 点击最右边的「选项」 选择「QTTab</description>
    </item>
    
    <item>
      <title>解决PD的bootcamp中windows无法联网的问题</title>
      <link>http://uyaki.github.io/post/%E8%A7%A3%E5%86%B3pd%E7%9A%84bootcamp%E4%B8%ADwindows%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 01 Apr 2022 15:25:29 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E8%A7%A3%E5%86%B3pd%E7%9A%84bootcamp%E4%B8%ADwindows%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>解决无法联网的问题: 1 vim /Library/Preferences/Parallels/network.desktop.xml 1 2 &amp;lt;!-- &amp;lt;UseKextless&amp;gt;-1&amp;lt;/UseKextless&amp;gt;改为 1--&amp;gt; &amp;lt;UseKextless&amp;gt;0&amp;lt;/UseKextless&amp;gt; 解决USB无法识别</description>
    </item>
    
    <item>
      <title>Steam如何绕过clash的全局代理</title>
      <link>http://uyaki.github.io/post/steam%E5%A6%82%E4%BD%95%E7%BB%95%E8%BF%87clash%E7%9A%84%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</link>
      <pubDate>Fri, 01 Apr 2022 01:40:49 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/steam%E5%A6%82%E4%BD%95%E7%BB%95%E8%BF%87clash%E7%9A%84%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</guid>
      <description>设置bypass Clash -&amp;gt; Settings -&amp;gt; System Proxy -&amp;gt; Bypass Domain/IPNet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 bypass:- localhost- 127.*- 10.*- 172.16.*- 172.17.*- 172.18.*- 172.19.*-</description>
    </item>
    
    <item>
      <title>使用sftp从服务器下载文件</title>
      <link>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8sftp%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 22 Apr 2020 10:54:52 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8sftp%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</guid>
      <description>sftp 交互式的文件传输程序，命令的运行和使用方式与 ftp 命令相似，但是，sftp 命令对传输的所有信息使用 ssh 加密，它还支持公钥认证和压缩等功能。 语法 1</description>
    </item>
    
    <item>
      <title>SSH免密登录CentOS7</title>
      <link>http://uyaki.github.io/post/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95centos7/</link>
      <pubDate>Sun, 19 Apr 2020 14:21:48 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95centos7/</guid>
      <description>本机传送id_rsa.pub 1 $ scp .ssh/id_rsa.pub user@ip:/root/id_rsa.pub 服务器 1 2 3 $ cat id_rsa.pub &amp;gt;&amp;gt; .ssh/authorized_keys $ chmod 700 .ssh $ chmod 600 .ssh/authorized_keys 服务器额外配置（centos7.4以下） 1 $ vim /etc/ssh/sshd_config 如下配置，7.4</description>
    </item>
    
    <item>
      <title>CentOS7开发环境</title>
      <link>http://uyaki.github.io/post/centos7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 19 Apr 2020 10:16:36 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/centos7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>基础配置 修改主机名 1 2 3 4 # 查看一下当前主机名的情况 $ hostnamectl $ hostnamectl set-hostname gakki --static $ hostnamectl status 基础工具 1 2 3 4 5 # 解决ifconfig 不存在 $ yum -y install net-tools # 文件传输 $</description>
    </item>
    
    <item>
      <title>DataX教程</title>
      <link>http://uyaki.github.io/post/datax%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 19 Mar 2020 09:46:31 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/datax%E6%95%99%E7%A8%8B/</guid>
      <description>安装 1 $ git clone git@github.com:alibaba/DataX.git 1 2 $ cd DataX $ vim pom.xml 注释掉不需要的reader、writer&amp;lt;module&amp;gt;标签 1 mvn -U clean package assembly:assembly -Dmaven.test.skip=true 使用</description>
    </item>
    
    <item>
      <title>ELasticSearch设置ik&#43;pinyin分词器</title>
      <link>http://uyaki.github.io/post/elasticsearch%E8%AE%BE%E7%BD%AEik&#43;pinyin%E5%88%86%E8%AF%8D%E5%99%A8/</link>
      <pubDate>Thu, 05 Mar 2020 19:28:53 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/elasticsearch%E8%AE%BE%E7%BD%AEik&#43;pinyin%E5%88%86%E8%AF%8D%E5%99%A8/</guid>
      <description>安装 假设你已经使用docker安装了es集群 1 $ cd ${docker-compose-file-dir} 安装ik插件 1 $ docker-compose exec es01 elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.0/elasticsearch-analysis-ik-7.6.0.zip 安装pinyin插件 1 $ docker-compose exec es01 elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-pinyin/releases/download/v7.6.0/elasticsearch-analysis-pinyin-7.6.0.zip 重启docker 1 $ docker-compose restart</description>
    </item>
    
    <item>
      <title>ElasticSearch修改已经存在的index的settings</title>
      <link>http://uyaki.github.io/post/elasticsearch%E4%BF%AE%E6%94%B9%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84index%E7%9A%84settings/</link>
      <pubDate>Thu, 05 Mar 2020 16:44:08 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/elasticsearch%E4%BF%AE%E6%94%B9%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84index%E7%9A%84settings/</guid>
      <description>关闭索引 1 POST /index/_close 修改索引Settings 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 PUT /index/_settings { &amp;#34;settings&amp;#34;: { &amp;#34;analysis&amp;#34;: { &amp;#34;analyzer&amp;#34;: { &amp;#34;ik_pinyin_analyzer&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;custom&amp;#34;, &amp;#34;tokenizer&amp;#34;: &amp;#34;ik_smart&amp;#34;, &amp;#34;filter&amp;#34;: [ &amp;#34;my_pinyin&amp;#34;, &amp;#34;word_delimiter&amp;#34; ] }</description>
    </item>
    
    <item>
      <title>Alfred设置WebSearch快速打开网页</title>
      <link>http://uyaki.github.io/post/alfred%E8%AE%BE%E7%BD%AEwebsearch%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5/</link>
      <pubDate>Wed, 04 Mar 2020 14:44:14 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/alfred%E8%AE%BE%E7%BD%AEwebsearch%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5/</guid>
      <description>Alfred -&amp;gt; feature -&amp;gt; Web Search -&amp;gt; Add Custom Search Search Url：输入网址 Keyword： 检索关键字</description>
    </item>
    
    <item>
      <title>Swagger出现Could not resolve pointer</title>
      <link>http://uyaki.github.io/post/swagger%E5%87%BA%E7%8E%B0could_not_resolve_pointer/</link>
      <pubDate>Wed, 04 Mar 2020 11:29:31 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/swagger%E5%87%BA%E7%8E%B0could_not_resolve_pointer/</guid>
      <description>问题描述 原因 类上的注解 “/” 的问题 @ApiModel(不能使用“/”)</description>
    </item>
    
    <item>
      <title>Homebrew安装443错误解决方案</title>
      <link>http://uyaki.github.io/post/homebrew%E5%AE%89%E8%A3%85443%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 29 Feb 2020 20:34:35 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/homebrew%E5%AE%89%E8%A3%85443%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>问题 安装 homebrew 报错 curl: (7) Failed to connect to raw.githubusercontent.com port 443: Operation 方案 重启终端； 重启wifi</description>
    </item>
    
    <item>
      <title>酸辣酱汁</title>
      <link>http://uyaki.github.io/post/%E9%85%B8%E8%BE%A3%E9%85%B1%E6%B1%81/</link>
      <pubDate>Fri, 28 Feb 2020 00:05:29 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E9%85%B8%E8%BE%A3%E9%85%B1%E6%B1%81/</guid>
      <description>用途 做各种酸辣口的面，粉丝，河粉 比例 1勺生抽 1勺陈醋 1勺白糖 1勺老干妈(喜欢辣点可以多加) 1/3勺盐 1勺番茄酱（推荐亨氏，酸甜口感更浓厚，喜</description>
    </item>
    
    <item>
      <title>Mysql修改Auto_increment</title>
      <link>http://uyaki.github.io/post/mysql%E4%BF%AE%E6%94%B9auto_increment/</link>
      <pubDate>Wed, 26 Feb 2020 10:25:52 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/mysql%E4%BF%AE%E6%94%B9auto_increment/</guid>
      <description>查看 1 selectauto_incrementfrominformation_schema.tableswheretable_schema=&amp;#39;xxx_db&amp;#39;andtable_name=&amp;#39;xxx&amp;#39;; 修改 1 altertablexxx_db.xxxauto_increment=1000; 坑：假设表中有ID大于你设置的值如1000，修改将不会生效</description>
    </item>
    
    <item>
      <title>Git标准Fork &amp; Pull Request流程</title>
      <link>http://uyaki.github.io/post/git%E6%A0%87%E5%87%86forkpullrequest%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sun, 23 Feb 2020 22:53:46 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E6%A0%87%E5%87%86forkpullrequest%E6%B5%81%E7%A8%8B/</guid>
      <description>fork项目 直接进入 GitHub 页面，点击Fork按钮。 就是这么简单。 克隆到本地，才能开始骚操作～～ 1 2 # Clone your fork to your local machine $ git clone git@github.com:USERNAME/FORKED-PROJECT.git 让你的fork保持最新</description>
    </item>
    
    <item>
      <title>Git中文乱码解决</title>
      <link>http://uyaki.github.io/post/git%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sun, 23 Feb 2020 22:05:37 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</guid>
      <description>git add 显示中文乱码 使用 git add 添加要提交的文件的时候，如果文件名是中文，会显示形如\347\204\246\347\263\226\345\245</description>
    </item>
    
    <item>
      <title>茄汁虾仁</title>
      <link>http://uyaki.github.io/post/%E8%8C%84%E6%B1%81%E8%99%BE%E4%BB%81/</link>
      <pubDate>Sun, 23 Feb 2020 20:03:51 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E8%8C%84%E6%B1%81%E8%99%BE%E4%BB%81/</guid>
      <description>工具 锅 食材 虾仁 15个 蒜 2瓣 油 适量 盐 1/2茶匙 料酒 1汤匙 番茄酱 2汤匙 清水 5汤匙 步骤 准备 虾仁加入1汤匙料酒、1/4茶匙盐，腌制10分钟 蒜切成蒜末</description>
    </item>
    
    <item>
      <title>蒜香蜂蜜烤鸡翅</title>
      <link>http://uyaki.github.io/post/%E8%92%9C%E9%A6%99%E8%9C%82%E8%9C%9C%E7%83%A4%E9%B8%A1%E7%BF%85/</link>
      <pubDate>Sun, 23 Feb 2020 16:26:44 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E8%92%9C%E9%A6%99%E8%9C%82%E8%9C%9C%E7%83%A4%E9%B8%A1%E7%BF%85/</guid>
      <description>工具 烤箱 锡纸 食材 鸡翅 5个 盐 小半勺 料酒 1勺 生抽 1勺 老抽 1勺 蚝油 1勺 蜂蜜 2勺 黑胡椒 适量 蒜末 适量 油 适量 步骤 准备 鸡翅洗干净，双面划出刀口，方便入味；</description>
    </item>
    
    <item>
      <title>焦糖奶茶</title>
      <link>http://uyaki.github.io/post/%E7%84%A6%E7%B3%96%E5%A5%B6%E8%8C%B6/</link>
      <pubDate>Sun, 23 Feb 2020 16:16:29 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E7%84%A6%E7%B3%96%E5%A5%B6%E8%8C%B6/</guid>
      <description>工具 锅 面粉筛（其他过滤也行） 食材 白糖 1/4碗 清水 1/4碗 开水 1/2 碗 茶叶适量（我用的大红袍） 纯牛奶一盒 步骤 制作 锅中倒入白糖，清水，小火煮，待糖融</description>
    </item>
    
    <item>
      <title>烤箱版鸡米花</title>
      <link>http://uyaki.github.io/post/%E7%83%A4%E7%AE%B1%E7%89%88%E9%B8%A1%E7%B1%B3%E8%8A%B1/</link>
      <pubDate>Sun, 23 Feb 2020 15:57:22 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E7%83%A4%E7%AE%B1%E7%89%88%E9%B8%A1%E7%B1%B3%E8%8A%B1/</guid>
      <description>工具 烤箱 锡纸 食材 鸡腿肉，可以用鸡胸肉代替 盐 半勺 酱油 1勺 料酒 1勺 蚝油 1勺 鸡蛋 1个 淀粉 适量 清水 适量 面包糠，可以用薯片代替 蕃茄酱 步骤 准备 鸡腿肉（或</description>
    </item>
    
    <item>
      <title>读书笔记 《沉默的大多数》</title>
      <link>http://uyaki.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0/</link>
      <pubDate>Sun, 23 Feb 2020 01:49:18 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0/</guid>
      <description>人要永远做小孩子虽办不到，但想要保持沉默是能办到的。 其实萧斯塔科维奇长得什么样，我也不知道。我只是想象他是这个样子，然后就哈哈大笑。我的朋友</description>
    </item>
    
    <item>
      <title>Homebrew实用命令总结</title>
      <link>http://uyaki.github.io/post/homebrew%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 23 Feb 2020 01:23:11 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/homebrew%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>更新Homebrew 1 $ brew update 查看哪些包可以更新 1 $ brew outdated 更新包 (formula) Homebrew 会安装新版本的包，但旧版本仍然会保留。 1 2 $ brew upgrade # 更新所有的包 $ brew upgrade $FORMULA # 更新</description>
    </item>
    
    <item>
      <title>SpringBoot设置项目热启动</title>
      <link>http://uyaki.github.io/post/springboot%E8%AE%BE%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%83%AD%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Sun, 23 Feb 2020 00:04:23 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/springboot%E8%AE%BE%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%83%AD%E5%90%AF%E5%8A%A8/</guid>
      <description>导入jar包 1 &amp;#39;org.springframework.boot:spring-boot-devtools&amp;#39; 添加配置项 1 2 3 devtools:#热部署restart:enabled:true 在idea开启 如下图设置 Build，Exe</description>
    </item>
    
    <item>
      <title>Java配置允许跨域访问</title>
      <link>http://uyaki.github.io/post/java%E9%85%8D%E7%BD%AE%E5%85%81%E8%AE%B8%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Sat, 22 Feb 2020 23:57:53 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/java%E9%85%8D%E7%BD%AE%E5%85%81%E8%AE%B8%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE/</guid>
      <description>方案 H5中的新特性：Cross-Origin Resource Sharing（跨域资源共享）。通过它，我们的开发者（主要指后端开发者）可以决定资源是否能被跨</description>
    </item>
    
    <item>
      <title>Git利用orphan分支功能清空所有历史记录</title>
      <link>http://uyaki.github.io/post/git%E5%88%A9%E7%94%A8orphan%E5%88%86%E6%94%AF%E5%8A%9F%E8%83%BD%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 19 Feb 2020 09:44:59 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E5%88%A9%E7%94%A8orphan%E5%88%86%E6%94%AF%E5%8A%9F%E8%83%BD%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>目的 清空git项目，获得一个没有历史记录的空项目 实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ## 创建一个orphan分支 $ git checkout --orphan tmp_branch ## 给爷爬~~~~ $ git rm</description>
    </item>
    
    <item>
      <title>Git使用子模块功能搭建多模块无关联IDEA项目</title>
      <link>http://uyaki.github.io/post/git%E4%BD%BF%E7%94%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E5%85%B3%E8%81%94idea%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Wed, 19 Feb 2020 09:00:55 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E4%BD%BF%E7%94%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E5%85%B3%E8%81%94idea%E9%A1%B9%E7%9B%AE/</guid>
      <description>项目创建 1 2 3 4 5 6 $ mkdir project-parent $ cd project-parent $ git submodule add git@repo1 $ git submodule add git@repo2 $ git submodule add git@repo3 ## git push 加载项目（他人） 1 2 3 4 $ git clone git@project-parent-repo $ cd project-parent $ git submodule init $ git submodule update idea idea使用op</description>
    </item>
    
    <item>
      <title>Jpa Id自增策略</title>
      <link>http://uyaki.github.io/post/jpa-id%E8%87%AA%E5%A2%9E%E7%AD%96%E7%95%A5/</link>
      <pubDate>Mon, 17 Feb 2020 15:03:09 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/jpa-id%E8%87%AA%E5%A2%9E%E7%AD%96%E7%95%A5/</guid>
      <description>TABLE：使用一个特定的数据库表格来保存主键。 SEQUENCE：根据底层数据库的序列来生成主键，条件是数据库支持序列。 IDENTITY：主</description>
    </item>
    
    <item>
      <title>使用ResponseBodyAdvice的beforeBodyWrite处理String导致cast问题</title>
      <link>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8responsebodyadvice%E7%9A%84beforebodywrite%E5%A4%84%E7%90%86string%E5%AF%BC%E8%87%B4cast%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 17 Feb 2020 15:02:02 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8responsebodyadvice%E7%9A%84beforebodywrite%E5%A4%84%E7%90%86string%E5%AF%BC%E8%87%B4cast%E9%97%AE%E9%A2%98/</guid>
      <description>问题 配置全局返回时 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @Configuration public class GlobalReturnConfig { @RestControllerAdvice(basePackages = &amp;#34;com.benyuan&amp;#34;) static class ResultResponseAdvice implements ResponseBodyAdvice&amp;lt;Object&amp;gt; { @Override public boolean supports(MethodParameter methodParameter, Class&amp;lt;? extends HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt; aClass) { return true; } @Override public Object beforeBodyWrite(Object body, MethodParameter methodParameter, MediaType mediaType, Class&amp;lt;? extends HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt; aClass, ServerHttpRequest serverHttpRequest,</description>
    </item>
    
    <item>
      <title>Git中HEAD游离的原因与解决方法</title>
      <link>http://uyaki.github.io/post/git%E4%B8%ADhead%E6%B8%B8%E7%A6%BB%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 17 Feb 2020 14:48:59 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E4%B8%ADhead%E6%B8%B8%E7%A6%BB%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>什么是 HEAD Git 中的 HEAD 可以理解为指针，指向当前仓库所处的分支。一般在有 Git 管理的目录下打开 Git 终端都能在当前路径的尾巴上，看到所处的分支名。 还可以在命</description>
    </item>
    
    <item>
      <title>Mac系统下修改docker的vm参数</title>
      <link>http://uyaki.github.io/post/mac%E7%B3%BB%E7%BB%9F%E4%B8%8B%E4%BF%AE%E6%94%B9docker%E7%9A%84vm%E5%8F%82%E6%95%B0/</link>
      <pubDate>Mon, 17 Feb 2020 14:10:15 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/mac%E7%B3%BB%E7%BB%9F%E4%B8%8B%E4%BF%AE%E6%94%B9docker%E7%9A%84vm%E5%8F%82%E6%95%B0/</guid>
      <description>screen 1 screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty 会出现如下界面 键入回车，出现如下界面 像正常linux系统一样设置 1 sysctl -w vm.max_map_count=262144 按control+a，再按control+\ ，左下角出现退出</description>
    </item>
    
    <item>
      <title>Docker部署ES、kibana并配置ik分词</title>
      <link>http://uyaki.github.io/post/docker%E9%83%A8%E7%BD%B2eskibana%E5%B9%B6%E9%85%8D%E7%BD%AEik%E5%88%86%E8%AF%8D/</link>
      <pubDate>Mon, 17 Feb 2020 13:59:26 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/docker%E9%83%A8%E7%BD%B2eskibana%E5%B9%B6%E9%85%8D%E7%BD%AEik%E5%88%86%E8%AF%8D/</guid>
      <description>1. 创建数据目录 1 2 3 4 5 6 7 8 9 10 #创建数据/日志目录 这里我们部署3个节点 $ mkdir /opt/elasticsearch/data/{es01,es02,es03} -p mkdir /opt/elasticsearch/logs/{es01,es02,es03} -p cd /opt/elasticsearch #权限 chmod 0777 data/* -R &amp;amp;&amp;amp; chmod 0777 logs/* -R #防止JVM报错 echo vm.max_map_count=262144 &amp;gt;&amp;gt; /etc/sysctl.conf</description>
    </item>
    
    <item>
      <title>腊肠炒荷兰豆</title>
      <link>http://uyaki.github.io/post/%E8%85%8A%E8%82%A0%E7%82%92%E8%8D%B7%E5%85%B0%E8%B1%86/</link>
      <pubDate>Sun, 16 Feb 2020 18:58:37 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E8%85%8A%E8%82%A0%E7%82%92%E8%8D%B7%E5%85%B0%E8%B1%86/</guid>
      <description>工具 锅 食材 腊肠 1~2根 荷兰豆 200g 盐 适量 耗油 1小勺 蒜粒 1瓣 花生油 适量 开水 少许 步骤 准备 荷兰豆掐头去筋，清洗； 腊肠斜刀切片； 蒜粒去衣切碎； 制作 起锅，</description>
    </item>
    
    <item>
      <title>Java8的18个时间处理实践</title>
      <link>http://uyaki.github.io/post/java8%E7%9A%8418%E4%B8%AA%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sat, 15 Feb 2020 15:58:54 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/java8%E7%9A%8418%E4%B8%AA%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%E5%AE%9E%E8%B7%B5/</guid>
      <description>java8 关于时间、日期处理 Java 8 推出了全新的日期时间 API。 Java 处理日期、日历和时间的方式一直为社区所诟病，将 java.util.Date 设定为可变类型，以及 SimpleDateFormat 的非线程安全使其</description>
    </item>
    
    <item>
      <title>香煎脆皮鸡排</title>
      <link>http://uyaki.github.io/post/%E9%A6%99%E7%85%8E%E8%84%86%E7%9A%AE%E9%B8%A1%E6%8E%92/</link>
      <pubDate>Thu, 13 Feb 2020 14:14:53 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E9%A6%99%E7%85%8E%E8%84%86%E7%9A%AE%E9%B8%A1%E6%8E%92/</guid>
      <description>工具 平底锅； 锡纸； 铁盆； 肉夹子（可用筷子🥢代替）； 食材 鸡腿 1~2个；🍗 盐🧂 1小勺； 酱油 1小勺； 料酒 1小勺； 步骤 准备 鸡腿去骨 沿着骨头🦴竖直方向</description>
    </item>
    
    <item>
      <title>使用GitHub和PicGo搭建个人图床</title>
      <link>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8github%E5%92%8Cpicgo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/</link>
      <pubDate>Wed, 12 Feb 2020 01:02:04 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E4%BD%BF%E7%94%A8github%E5%92%8Cpicgo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/</guid>
      <description>Github操作 新建repository作为图床地址 创建token 访问 https://github.com/settings/tokens，</description>
    </item>
    
    <item>
      <title>Spacemacs清华源镜像加速</title>
      <link>http://uyaki.github.io/post/spacemacs%E6%B8%85%E5%8D%8E%E6%BA%90%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</link>
      <pubDate>Tue, 11 Feb 2020 13:48:32 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/spacemacs%E6%B8%85%E5%8D%8E%E6%BA%90%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</guid>
      <description>核心配置 添加下面的代码到.spacemacs或~/.spacemacs/init.el 的dotspacemacs/user-init()下 1</description>
    </item>
    
    <item>
      <title>Git删除 .DS_Store</title>
      <link>http://uyaki.github.io/post/git%E5%88%A0%E9%99%A4.ds_store/</link>
      <pubDate>Tue, 11 Feb 2020 11:16:29 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E5%88%A0%E9%99%A4.ds_store/</guid>
      <description>cd 到项目路径 执行 1 $ find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch 插入到.gitignore 1 $ echo .DS_Store &amp;gt;&amp;gt; .gitignore git push</description>
    </item>
    
    <item>
      <title>Git空提交</title>
      <link>http://uyaki.github.io/post/git%E7%A9%BA%E6%8F%90%E4%BA%A4/</link>
      <pubDate>Tue, 11 Feb 2020 11:12:37 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E7%A9%BA%E6%8F%90%E4%BA%A4/</guid>
      <description>1 $ git commit --allow-empty -m &amp;#34;chore: touch ops build&amp;#34;</description>
    </item>
    
    <item>
      <title>MacOS使用MacVim替代vim</title>
      <link>http://uyaki.github.io/post/macos%E4%BD%BF%E7%94%A8macvim%E6%9B%BF%E4%BB%A3vim/</link>
      <pubDate>Tue, 11 Feb 2020 11:06:59 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/macos%E4%BD%BF%E7%94%A8macvim%E6%9B%BF%E4%BB%A3vim/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 ## 安装macvim brew install macvim ## 编辑配置文件 vim ~/.zshrc ## 添加 alias vi=vim alias vim=mvim alias mvim=&amp;#39;/usr/local/bin/mvim -v&amp;#39; ## 生效 source ~/.zshrc</description>
    </item>
    
    <item>
      <title>Docker切换镜像源</title>
      <link>http://uyaki.github.io/post/docker%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/</link>
      <pubDate>Tue, 11 Feb 2020 10:57:01 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/docker%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/</guid>
      <description>1 $ sudo mkdir -p /etc/docker 1 2 3 4 5 6 7 8 9 $ sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://28ffkr6d.mirror.aliyuncs.com&amp;#34;] } EOF 1 $ sudo systemctl daemon-reload 1 $ sudo systemctl restart docker</description>
    </item>
    
    <item>
      <title>MacOS在iTerm中使用rz、sz从远程上传下载文件</title>
      <link>http://uyaki.github.io/post/macos%E5%9C%A8iterm%E4%B8%AD%E4%BD%BF%E7%94%A8rzsz%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 11 Feb 2020 10:49:09 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/macos%E5%9C%A8iterm%E4%B8%AD%E4%BD%BF%E7%94%A8rzsz%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</guid>
      <description>安装 下载安装lrzsz，创建软连接（mac） 1 2 3 4 5 sudo brew install lrzsz ln -s /usr/local/Cellar/lrzsz/0.12.20/bin/sz ln -s /usr/local/Cellar/lrzsz/0.12.20/bin/rz 说明：lrzsz在本地和远程主机均要安装！ 下载并安装automat</description>
    </item>
    
    <item>
      <title>SSH使用pem文件远程登陆</title>
      <link>http://uyaki.github.io/post/ssh%E4%BD%BF%E7%94%A8pem%E6%96%87%E4%BB%B6%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86/</link>
      <pubDate>Tue, 11 Feb 2020 10:46:03 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/ssh%E4%BD%BF%E7%94%A8pem%E6%96%87%E4%BB%B6%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86/</guid>
      <description>方式一： 修改pem权限； 1 sudo chmod 600 key.pem Mac OS 连接服务器使用 PEM 文件； 1 ssh -i key.pem root@IP 方式二（Mac重启后失效）： 使用ssh-add添加key文件； 1 ssh-add -k key.pem</description>
    </item>
    
    <item>
      <title>Git加速最佳实践</title>
      <link>http://uyaki.github.io/post/git%E5%8A%A0%E9%80%9F%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 11 Feb 2020 09:25:55 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/git%E5%8A%A0%E9%80%9F%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>Git支持的协议 https协议，https://协议需要配置git的http.proxy参数 ssh协议，ssh://协议需要配置ssh的Pr</description>
    </item>
    
    <item>
      <title>华夫饼</title>
      <link>http://uyaki.github.io/post/%E5%8D%8E%E5%A4%AB%E9%A5%BC/</link>
      <pubDate>Sat, 08 Feb 2020 20:27:36 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/%E5%8D%8E%E5%A4%AB%E9%A5%BC/</guid>
      <description>华夫饼🧇 工具 必须 打蛋器（手动电动均可） 打蛋桶 电饼铛 电子秤 刷子 烘培夹子 非必须 面粉筛 食材 份量：大概6张华夫饼，按实际情况增减 必须 鸡蛋🥚 3个 白砂糖</description>
    </item>
    
    <item>
      <title>Hugo搭建</title>
      <link>http://uyaki.github.io/post/hugo%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 06 Feb 2020 21:56:02 +0800</pubDate>
      
      <guid>http://uyaki.github.io/post/hugo%E6%90%AD%E5%BB%BA/</guid>
      <description>使用 Hugo 搭建博客 hugo 安装 依赖： Git Mercurial Go Mac 下直接使用 Homebrew 安装： 1 $ brew install hugo github仓库准备 create new repositories =&amp;gt; blog ，用来存放网站内容和源文件； create new repositories =&amp;gt; &amp;lt;username&amp;gt;.github.io ，用于存放</description>
    </item>
    
  </channel>
</rss>
